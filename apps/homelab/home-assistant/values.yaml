persistence:
  enabled: true
  existingClaim: ""
  storageClass: "longhorn"
  accessMode: ReadWriteOnce
  size: "10Gi"

ingress:
  enabled: true
  className: "nginx"
  hosts:
    - host: "hass.dtavana.dev"
      paths:
        - path: /
          pathType: Prefix

configuration:
  enabled: true
  forceInit: false
  trusted_proxies:
    - "10.42.0.0/16"
    - "10.43.0.0/16"
    - "192.168.0.33"
    - "127.0.0.1/8"

  templateConfig: |-
    default_config:

    homeassistant:
      external_url: "https://hass.dtavana.dev"

    {{- if or .Values.ingress.enabled .Values.ingress.external }}
    http:
      use_x_forwarded_for: true
      trusted_proxies:
        {{- range .Values.configuration.trusted_proxies }}
        - {{ . }}
        {{- end }}
    {{- end}}
    frontend:
      themes: !include_dir_merge_named themes

    automation: !include automations.yaml
    script: !include scripts.yaml
    scene: !include scenes.yaml

env:
  - name: TZ
    value: "America/New_York"

initContainers:
  - name: install-hacs
    image: alpine:latest
    command: ["/bin/sh", "-c"]
    args:
      - |
        set -e
        HACS_DIR="/config/custom_components/hacs"
        if [ -d "$HACS_DIR" ]; then
          echo "HACS is already installed, skipping."
        else
          echo "Installing HACS..."
          apk add --no-cache wget unzip
          mkdir -p $(dirname "$HACS_DIR")
          wget -O /tmp/hacs.zip https://github.com/hacs/integration/releases/latest/download/hacs.zip
          unzip /tmp/hacs.zip -d "$HACS_DIR"
          rm /tmp/hacs.zip
          echo "HACS installation complete."
        fi
    volumeMounts:
      - name: hass-system-home-assistant
        mountPath: /config
